---
title: "Workshop: HTML, Javascript, SVG, D3"
format:
    html:
        toc: true
        css: style.css
---

[Home page](.)

```{r}
```

## HTML

::: {.tip}
The next sections build up to the file `example.html` in the workshop files.
:::

Open a text editor and create a file called `hello.html` and type the following:

```html
<!doctype html>

<title>My page</title>

<p>Hello.</p>
```

In your web browser, go to the `File / Open file...` in the menus and open the file. Or enter the URL `file:///`, and navigate to your file.

What's all this?

* `<!doctype html>` tells the browser that this page is written in HTML5, the latest standard, and that it doesn't need to emulate any quirks of older browsers.

* `<title>...</title>` sets the title of the page, visible in your tab bar.

* `<p>...</p>` denotes a paragraph of text. There are many different tags like this to tell the browser the meaning of text in the page (paragraph, heading, list, table, division, etc etc), and so how to display it.

## Let's get developing

In your browser, find the web developer tools.

Chrome: 

* `[ ⋮ ] / More Tools / Developer Tools`

Firefox: 

* `[ ☰ ] / More Tools / Web Developer Tools`

Safari:

* Go to `Safari / Settings / Advanced` and check `[✓] Show features for web developers`.
* Go to `Developer / Show Web Inspector`.

Notice the document consists of text within tags within tags. It's a "tree".

We left out some things, but the browser has filled them in, such as `<html>...</html>`, `<body>...</body>`, `<head>...</head>`.


### Pause

Make sure you try all this yourself.


## SVG

Add the following text to your page:

```html
<svg width="600" height="600">
    <circle cx="50" cy="50" r="10" />
</svg>
```


## JavaScript

Add the following to the end of your HTML file:

```html
<script>
"use strict";

console.log("Hello from JavaScript!");
</script>
```

The magic line `"use sctrict";` enables some extra error checking, you should always include it.

The `console.log("...")` displays text in the console of the web developer tools.

::: {.tip}
Your HTML file should now look like `example.html` in the workshop files, and look like [this](jsfoot/example.html) in your browser.
:::


## D3

::: {.tip}
This section builds up to the file `exampleD3.html` in the workshop files.
:::

### Modify text

### Respond to a button click

::: {.tip}
Your HTML file should now look like `exampleD3.html` in the workshop files, and look like [this](jsfoot/exampleD3.html) in your browser.
:::

## D3 with data

::: {.tip}
The remainder of the workshop builds up to the file `examplePlots.html` in the workshop files.
:::

### Load data

### Scatter-plot

### Mouse interaction

### Exercise: add a second plot

::: {.tip}
Your HTML file should now look like `examplePlots.html` in the workshop files, and look like [this](jsfoot/examplePlots.html) in your browser.
:::

## Share with the world


## Further possible refinements

* The highlight could be made to work for both scatter-plots.
* A fully fleshed out interaction scheme may need to listen to multiple types of events. For example the highlight should disappear when it leaves a scatter-plot by responding to `"mouseleave"` events.

\

* Usually there is scale that maps data to screen position. `d3.scale` can help with this.
* A plot usually has a visual indication of the scale. `d3.axis` can provide this.



